services:
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - next_frontend
  #     - app_backend
  #   networks:
  #     - app-network

  app_backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    image: sweval/backend:dev
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - venv:/app/.venv
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - app-network

  next_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: sweval/frontend:dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env.local
    environment:
      - NODE_ENV=development
    depends_on:
      - app_backend
    networks:
      - app-network

  db:
    image: pgvector/pgvector:pg16
    volumes:
      - postgres_dev:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Added this line
    env_file:
      - .env.db
    ports:
      - "5433:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_sweval
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    networks:
      - app-network
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  postgres_dev:
  venv: